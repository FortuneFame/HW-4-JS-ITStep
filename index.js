
// ------------------------------- Global function ----------------------------------


function checking(x) {
    var ret;
    if (x) {
        if (isNaN(x) || !x.trim()) {
            ret = false;
        }
        else if (x < 0) {
            ret = false;
        }
        else if (x % 1 != 0) {
            ret = false    
        }
        else {
            ret = true;
        }
    }
    else {
        ret = false;
    }
    return ret;
}


function timeForm(h, m, s) {
    h = parseInt(h)
    m = parseInt(m)
    s = parseInt(s)
    return ((h < 10 ? "0" + h : h) + " : " + (m < 10 ? "0" + m : m) + " : " + (s < 10 ? "0" + s : s));
}


// ------------------------------- Task 1 ----------------------------------


var x = 0;
var y = 0;
var textTask1 = "";

x = prompt('–í–≤–µ–¥–∏ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ');
y = prompt('–í–≤–µ–¥–∏ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ');

function calculation(x, y) {
    var res;
    if (x > y) {
        res = 1;
    }
    else if (x < y) {
        res = -1;
    }
    else {
        res = 0
    }
    return res
}

if (!checking(x) || !checking(y)) {
    task1.innerHTML = "<h2>" + "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ \nü•∫!!Error!!" + "</h2> ";
}
else {
    task1.innerHTML = "<p>" + "–ü–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ " + x + "  " + "<br>" + "–í—Ç–æ—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ" + "  " + y + "  " + "<br>" + "–ü–æ–ª—É—á–∏–ª–æ—Å—å :" + "  " + (calculation(x, y)) + "</p>";
}



// ------------------------------- Task 2 ----------------------------------


var nums = 0;
var textTask2 = "";

nums = prompt("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ");

function factorial(nums) {
    if (nums === 0) {
        return 1;
    }
    return nums * factorial(nums - 1);
}

if (!checking(nums)) {
    task2.innerHTML = "<h2>" + "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ \nü•∫!!Error!!" + "</h2> ";
}
else {
    task2.innerHTML = "<p>" + "–§–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞" + " " + nums + "<br>" + " –ë—É–¥–µ—Ç: " + " " + factorial(nums) + "</p>";
}


// ------------------------------- Task 3 ----------------------------------


var one = 0;
var two = 0;
var three = 0;
var textTask3 = "";

one = prompt('–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ');
two = prompt('–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ');
three = prompt('–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ—Ç—å–µ —á–∏—Å–ª–æ');


function createNumber() {
    let sum = [];
    let sumNum = 0;
    for (let i = 0; i < arguments.length; i++) {
        sum += parseInt(arguments[i]);
    }
    sumNum = parseInt(sum)
    console.log(typeof(sumNum)) // –≠—Ç–æ –ß–ò–°–õ–û –∏ –ø—Ä–æ–≤–µ—Ä—è–ª–∞ –Ω–æ–ª—è–º–∏
    return sumNum;
}

if (!checking(one) || !checking(two) || !checking(three)) {
    task3.innerHTML = "<h2>" + "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ \nü•∫!!Error!!" + "</h2> ";
}
else {
    task3.innerHTML = "<p>" + "–í—ã—à–ª–æ —á–∏—Å–ª–æ: " + createNumber(one, two, three) + "</p>";
}


// ------------------------------- Task 4 ----------------------------------


var a = 0;
var b = 0;
var textTask4 = "";

a = prompt("–í–≤–µ–¥–∏ –¥–ª–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)"); 
b = prompt("–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)");

function square(x, y) {

    let squareArea = 0;

    if (x == 0) {
        squareArea = y * y;
    }
    else if (y == 0) {
        squareArea = x * x;
    }
    else {
        squareArea = x * y;
    }
    return squareArea;
}

if (!checking(a) || !checking(b)) {
    task4.innerHTML = "<h2>" + "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ \nü•∫!!Error!!" + "</h2> ";
}
else {
    task4.innerHTML = "<p>" + "–ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –±—É–¥–µ—Ç: " + " " + square(a, b) + "</p>";
}


// ------------------------------- Task 5 ----------------------------------


function isPerfect(number) {
	var temp = 0;
	for (var i = 1; i <= number / 2; i++) {
		if (number % i === 0) temp += i;
	}
    if (temp == number && temp != 0) {
        return true
    }
    else {
        return false;
    }
}

var numberU = 0;

numberU = prompt('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ');

if (!checking(numberU) || numberU == 0) {
    task5.innerHTML = "<h2>" + "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ \nü•∫!!Error!!" + "</h2> ";
}
else {
    if (isPerfect(+numberU)) {
        task5.innerHTML = "<h2> " + numberU + "</h2> " + "</br>" + "<p>" + "–≠—Ç–æ –°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ!" + "</p> ";
    }
    else {
        task5.innerHTML = "<h2> " + numberU + "</h2> " + "</br>" + "<p>" + "–≠—Ç–æ –ù–ï –°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ!" + "</p> ";
    }
}


// ------------------------------- Task 6 ----------------------------------


var start = 0;
var end = 0;

function perfectNumFromRange(start, end) {

    start = prompt(`–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –±–æ–ª—å—à–µ –Ω—É–ª—è`);
    end = prompt(`–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—Ü –¥–∏–∞–ø–∞–∑–æ–Ω–∞`);

    let result = [];

    if (start > end) {
        let turn = start;
        start = end;
        end = turn;
    }

    if (!checking(start) || !checking(end) || start == 0 || end == 0) {
        task6.innerHTML = "<h2>" + "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ \nü•∫!!Error!!" + "</h2> "
    }
    else {
        for (i = start; i <= end; i++) {
            if (isPerfect(i)) {
                result.push(i);
                task6.innerHTML = "<p>" + "–í—Å–µ –°–æ–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –∏–∑ —ç—Ç–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞: " + result.join(", ") + "</p>"
            }
        }
    }
}

perfectNumFromRange(start, end)


// ------------------------------- Task 7 ----------------------------------


var hour = 0;
var minut = 0;
var second = 0;

hour = prompt("–í–≤–µ–¥–∏—á–∏—Ç–µ —á–∞—Å—ã");
minut = prompt("–í–≤–µ–¥–∏—á–∏—Ç–µ –º–∏–Ω—É—Ç—ã");
second = prompt("–í–≤–µ–¥–∏—á–∏—Ç–µ —Å–µ–∫—É–Ω–¥—ã");


function time(hour, minut, second) {

    hour = +hour;
    minut = +minut;
    second = +second;

    minut = minut + (second - second % 60) / 60;
    second = second % 60;
    hour = hour + (minut - minut % 60) / 60;
    minut = minut % 60;

    return timeForm(hour, minut, second);

}

if (!checking(hour) || !checking(minut) || !checking(second)) {
    task7.innerHTML = "<h2>" + "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ \nü•∫!!Error!!" + "</h2> "
}
else {
     task7.innerHTML = "<p>" + time(hour, minut, second) + "</p>"
}
    

// ------------------------------- Task 8 ----------------------------------


var h = 0;
var m = 0;
var s = 0;

function timeIsSeconds(h, m, s) {
   
    return ((h * 60) * 60 + (m * 60) + s)   //(h * 3600) + (m * 60) + s
}

h = prompt("–í–≤–µ–¥–∏—á–∏—Ç–µ —á–∞—Å");
m = prompt("–í–≤–µ–¥–∏—á–∏—Ç–µ –º–∏–Ω—É—Ç—ã");
s = prompt("–í–≤–µ–¥–∏—á–∏—Ç–µ —Å–µ–∫—É–Ω–¥—ã");

if (!checking(h) || !checking(m) || !checking(s)) {
    task8.innerHTML = "<h2>" + "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ \nü•∫!!Error!!" + "</h2> "
}
else {
    task8.innerHTML = "<p>" + "–ò–∑ " + " " + parseInt(h) + " : " + parseInt(m) + " : " + parseInt(s) + "</br>" + "–í—ã—à–ª–æ: " + " " + timeIsSeconds(h, m, s) + " " + " —Å–µ–∫—É–Ω–¥" + "</p>"
}


// ------------------------------- Task 9 ----------------------------------


var secondsUser = 0;

secondsUser = prompt('–í–≤–µ–¥–∏—Ç–µ —Å–µ–∫—É–Ω–¥—ã')

function secondsToTime(seconds) {

    var sec = 0;
    var min = 0;
    var hou = 0;

    min = Math.floor(seconds / 60);
    sec = seconds % 60
    hou = Math.floor(min / 60);
    min = min % 60;

    return timeForm(hou, min, sec)

}

if (!checking(secondsUser)) {
    task9.innerHTML = "<h2>" + "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ \nü•∫!!Error!!" + "</h2> "
}
else {
    task9.innerHTML = "<p>" + "–ò–∑ " + " " + parseInt(secondsUser) + " " + "—Å–µ–∫—É–Ω–¥" + "</br>" + "–í—ã—à–ª–æ " + " " + secondsToTime(secondsUser) + "</p>";
}


// ------------------------------- Task 10 ---------------------------------


var oneH = 0;
var oneM = 0;
var oneS = 0;

var twoH = 0;
var twoM = 0;
var twoS = 0;

    oneH = prompt("–í–≤–µ–¥–∏—á–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –ü–µ—Ä–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏");
    oneM = prompt("–í–≤–µ–¥–∏—á–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ü–µ—Ä–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏");
    oneS = prompt("–í–≤–µ–¥–∏—á–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –ü–µ—Ä–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏");

    twoH = prompt("–í–≤–µ–¥–∏—á–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –í—Ç–æ—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏");
    twoM = prompt("–í–≤–µ–¥–∏—á–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –í—Ç–æ—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏");
    twoS = prompt("–í–≤–µ–¥–∏—á–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –í—Ç–æ—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏");

    function difference(c, d) {
        if (c > d) {
            var different = c - d;
        }
        else if (c < d) {
            different = d - c;
        }
        return different;
    }

function simileTwoTime(oneH, oneM, oneS, twoH, twoM, twoS) {

    var oneTimeSec = timeIsSeconds(+oneH, +oneM, +oneS);    // —Å–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –∑–∞ –ø–æ–º–æ—â—å
    var twoTimeSec = timeIsSeconds(+twoH, +twoM, +twoS);    // —è –ø–æ–Ω—è–ª–∞ —á—Ç–æ –º–Ω–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç 
                                                            // —Ö–æ—Ä–æ—à–µ–Ω—å–∫–æ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞—Ç—å —ç—Ç–æ—Ç "+"
    var resultDiff = difference(+oneTimeSec, +twoTimeSec);
    return resultDiff;
}

var resultTimeDiff = simileTwoTime(+oneH, +oneM, +oneS, +twoH, +twoM, +twoS);
var resultTask = secondsToTime(+resultTimeDiff)

    var timeOne = time(oneH, oneM, oneS);
    var timeTwo = time(twoH, twoM, twoS);

if (!checking(oneH) || !checking(oneM) || !checking(oneS) || !checking(twoH) || !checking(twoM) || !checking(twoS)) {
    task10.innerHTML = "<h2>" + "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ \nü•∫!!Error!!" + "</h2> ";
}
else {
    task10.innerHTML = "<p>" + "–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É " + " " + timeOne + " " + "–∏ " + timeTwo + "</br>" + "–í—ã—à–ª–æ " + " " + resultTask + "</p>";
}
